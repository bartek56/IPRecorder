project(GSMEngine)

set (CMAKE_CXX_STANDARD 17)
cmake_minimum_required(VERSION 3.0)


option(SIMULATOR "Simulator" OFF)
if(SIMULATOR)
  message(STATUS "build for AT simulator")
  add_definitions(-DSIMULATOR=1)
else()
  message(STATUS "build for GSM module")
  add_definitions(-DSIMULATOR=0)
endif()

if(CMAKE_BUILD_TYPE STREQUAL "Release")
    set(LOG_LEVEL 2)
elseif(CMAKE_BUILD_TYPE STREQUAL "Debug")
    set(LOG_LEVEL 1)
else()
    set(LOG_LEVEL 2)
endif()

set(LOG_LEVEL 1)

if(LOG_LEVEL EQUAL 0)
  add_definitions(-DSPDLOG_ACTIVE_LEVEL=SPDLOG_LEVEL_TRACE)
  message(STATUS "LOG level is set to TRACE")
elseif(LOG_LEVEL EQUAL 1)
  add_definitions(-DSPDLOG_ACTIVE_LEVEL=SPDLOG_LEVEL_DEBUG)
  message(STATUS "LOG level is set to DEBUG")
elseif(LOG_LEVEL EQUAL 2)
  add_definitions(-DSPDLOG_ACTIVE_LEVEL=SPDLOG_LEVEL_INFO)
  message(STATUS "LOG level is set to INFO")
elseif(LOG_LEVEL EQUAL 3)
  add_definitions(-DSPDLOG_ACTIVE_LEVEL=SPDLOG_LEVEL_WARNING)
  message(STATUS "LOG level is set to WARNING")
elseif(LOG_LEVEL EQUAL 4)
  add_definitions(-DSPDLOG_ACTIVE_LEVEL=SPDLOG_LEVEL_ERROR)
  message(STATUS "LOG level is set to ERROR")
endif()

set(SPDLOG_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/3rdparty/spdlog/include)
set(CMAKE_POSITION_INDEPENDENT_CODE ON)
add_subdirectory(3rdparty/spdlog)
add_subdirectory(3rdparty/pybind11)
add_subdirectory(GSMManager)
add_subdirectory(GSMManagerWrapper)
add_subdirectory(GSMApp)
